{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/tinydecoder/ShaderProgram.js","webpack:///./src/tinydecoder/ShaderCompiler.js","webpack:///./src/tinydecoder/ShaderSources.js","webpack:///./src/tinydecoder/YUVSurfaceShader.js","webpack:///./src/tinydecoder/Texture.js","webpack:///./src/tinydecoder/CanvasRenderer.js","webpack:///./src/tinydecoder/CanvasRenderer.worker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ShaderProgram","gl","this","program","createProgram","shader","attachShader","linkProgram","getProgramParameter","LINK_STATUS","console","error","useProgram","getAttribLocation","getUniformLocation","uniformLocation","array","uniformMatrix4fv","ShaderCompiler","script","type","createShader","FRAGMENT_SHADER","Error","VERTEX_SHADER","shaderSource","source","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","vertexQuad","fragmentYUV","_initShaders","shaderArgs","_initShaderArgs","vertexBuffer","_initBuffers","attach","compile","link","use","yTexture","uTexture","vTexture","u_projection","a_position","getAttributeLocation","enableVertexAttribArray","a_texCoord","createBuffer","textureY","textureU","textureV","uniform1i","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","texture","TEXTURE1","TEXTURE2","encodedFrameSize","h264RenderState","w","h","viewport","setUniformM4","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","maxXTexCoord","maxYTexCoord","DYNAMIC_DRAW","vertexAttribPointer","FLOAT","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","drawArrays","TRIANGLE_STRIP","Texture","format","createTexture","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","buffer","x","y","width","height","texSubImage2D","UNSIGNED_BYTE","texImage2D","deleteTexture","canvas","getContext","yuvSurfaceShader","LUMINANCE","stride","lumaSize","chromaSize","yBuffer","subarray","uBuffer","vBuffer","chromaHeight","chromaStride","image2dBuffer","setTexture","updateShaderData","draw","canvasRenderer","self","addEventListener","e","message","data","onPicture","Uint8Array"],"mappings":"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","file":"b236a27a1dcc54aa309b.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default class ShaderProgram {\n  /**\n   * @param {WebGLRenderingContext}gl\n   */\n  constructor (gl) {\n    this.gl = gl\n    this.program = this.gl.createProgram()\n  }\n\n  /**\n   * @param {WebGLShader}shader\n   */\n  attach (shader) {\n    this.gl.attachShader(this.program, shader)\n  }\n\n  link () {\n    this.gl.linkProgram(this.program)\n    // If creating the shader program failed, alert.\n    if (!this.gl.getProgramParameter(this.program, this.gl.LINK_STATUS)) {\n      console.error('Unable to initialize the shader program.')\n    }\n  }\n\n  use () {\n    this.gl.useProgram(this.program)\n  }\n\n  /**\n   * @param {string}name\n   * @return {number}\n   */\n  getAttributeLocation (name) {\n    return this.gl.getAttribLocation(this.program, name)\n  }\n\n  /**\n   * @param {string}name\n   * @return {WebGLUniformLocation | null}\n   */\n  getUniformLocation (name) {\n    return this.gl.getUniformLocation(this.program, name)\n  }\n\n  /**\n   * @param {WebGLUniformLocation}uniformLocation\n   * @param {Array<number>}array\n   */\n  setUniformM4 (uniformLocation, array) {\n    this.gl.uniformMatrix4fv(uniformLocation, false, array)\n  }\n}\n","/**\n * Represents a WebGL shader object and provides a mechanism to load shaders from HTML\n * script tags.\n */\n\nexport default class ShaderCompiler {\n  /**\n   * @param {WebGLRenderingContext}gl\n   * @param {{type: string, source: string}}script\n   * @return {WebGLShader}\n   */\n  static compile (gl, script) {\n    let shader\n    // Now figure out what type of shader script we have, based on its MIME type.\n    if (script.type === 'x-shader/x-fragment') {\n      shader = gl.createShader(gl.FRAGMENT_SHADER)\n    } else if (script.type === 'x-shader/x-vertex') {\n      shader = gl.createShader(gl.VERTEX_SHADER)\n    } else {\n      throw new Error('Unknown shader type: ' + script.type)\n    }\n\n    // Send the source to the shader object.\n    gl.shaderSource(shader, script.source)\n\n    // Compile the shader program.\n    gl.compileShader(shader)\n\n    // See if it compiled successfully.\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n      throw new Error('An error occurred compiling the shaders: ' + gl.getShaderInfoLog(shader))\n    }\n\n    return shader\n  }\n}\n","/**\n * @type {{type: string, source: string}}\n */\nexport const vertexQuad = {\n  type: 'x-shader/x-vertex',\n  source: `\n  precision mediump float;\n\n  uniform mat4 u_projection;\n  attribute vec2 a_position;\n  attribute vec2 a_texCoord;\n  varying vec2 v_texCoord;\n  void main(){\n      v_texCoord = a_texCoord;\n      gl_Position = u_projection * vec4(a_position, 0.0, 1.0);\n  }\n`\n}\n\n/**\n * @type {{type: string, source: string}}\n */\nexport const fragmentYUV = {\n  type: 'x-shader/x-fragment',\n  source: `\n  precision lowp float;\n  \n  varying vec2 v_texCoord;\n  \n  uniform sampler2D yTexture;\n  uniform sampler2D uTexture;\n  uniform sampler2D vTexture;\n    \n  const mat4 conversion = mat4(\n    1.0,     0.0,     1.402,  -0.701,\n    1.0,    -0.344,  -0.714,   0.529,\n    1.0,     1.772,   0.0,    -0.886,\n    0.0,     0.0,     0.0,     0.0\n  );\n\n  void main(void) {\n    float yChannel = texture2D(yTexture, v_texCoord).x;\n    float uChannel = texture2D(uTexture, v_texCoord).x;\n    float vChannel = texture2D(vTexture, v_texCoord).x;\n    vec4 channels = vec4(yChannel, uChannel, vChannel, 1.0);\n    vec3 rgb = (channels * conversion).xyz;\n    gl_FragColor = vec4(rgb, 1.0);\n  }\n`\n}\n","import ShaderProgram from './ShaderProgram'\nimport ShaderCompiler from './ShaderCompiler'\nimport { fragmentYUV, vertexQuad } from './ShaderSources'\n\nexport default class YUVSurfaceShader {\n  /**\n   *\n   * @param {WebGLRenderingContext} gl\n   * @returns {YUVSurfaceShader}\n   */\n  static create (gl) {\n    const program = this._initShaders(gl)\n    const shaderArgs = this._initShaderArgs(gl, program)\n    const vertexBuffer = this._initBuffers(gl)\n\n    return new YUVSurfaceShader(gl, vertexBuffer, shaderArgs, program)\n  }\n\n  static _initShaders (gl) {\n    const program = new ShaderProgram(gl)\n    program.attach(ShaderCompiler.compile(gl, vertexQuad))\n    program.attach(ShaderCompiler.compile(gl, fragmentYUV))\n    program.link()\n    program.use()\n\n    return program\n  }\n\n  static _initShaderArgs (gl, program) {\n    // find shader arguments\n    const shaderArgs = {}\n    shaderArgs.yTexture = program.getUniformLocation('yTexture')\n    shaderArgs.uTexture = program.getUniformLocation('uTexture')\n    shaderArgs.vTexture = program.getUniformLocation('vTexture')\n\n    shaderArgs.u_projection = program.getUniformLocation('u_projection')\n\n    shaderArgs.a_position = program.getAttributeLocation('a_position')\n    gl.enableVertexAttribArray(shaderArgs.a_position)\n    shaderArgs.a_texCoord = program.getAttributeLocation('a_texCoord')\n    gl.enableVertexAttribArray(shaderArgs.a_texCoord)\n\n    return shaderArgs\n  }\n\n  static _initBuffers (gl) {\n    // Create vertex buffer object.\n    return gl.createBuffer()\n  }\n\n  constructor (gl, vertexBuffer, shaderArgs, program) {\n    this.gl = gl\n    this.vertexBuffer = vertexBuffer\n    this.shaderArgs = shaderArgs\n    this.program = program\n  }\n\n  /**\n   *\n   * @param {Texture} textureY\n   * @param {Texture} textureU\n   * @param {Texture} textureV\n   */\n  setTexture (textureY, textureU, textureV) {\n    const gl = this.gl\n\n    gl.uniform1i(this.shaderArgs.yTexture, 0)\n    gl.uniform1i(this.shaderArgs.uTexture, 1)\n    gl.uniform1i(this.shaderArgs.vTexture, 2)\n\n    gl.activeTexture(gl.TEXTURE0)\n    gl.bindTexture(gl.TEXTURE_2D, textureY.texture)\n\n    gl.activeTexture(gl.TEXTURE1)\n    gl.bindTexture(gl.TEXTURE_2D, textureU.texture)\n\n    gl.activeTexture(gl.TEXTURE2)\n    gl.bindTexture(gl.TEXTURE_2D, textureV.texture)\n  }\n\n  use () {\n    this.program.use()\n  }\n\n  release () {\n    const gl = this.gl\n    gl.useProgram(null)\n  }\n\n  /**\n   * @param {{w:number, h:number}}encodedFrameSize\n   * @param {{maxXTexCoord:number, maxYTexCoord:number}} h264RenderState\n   */\n  updateShaderData (encodedFrameSize, h264RenderState) {\n    const { w, h } = encodedFrameSize\n    this.gl.viewport(0, 0, w, h)\n    this.program.setUniformM4(this.shaderArgs.u_projection, [\n      2.0 / w, 0, 0, 0,\n      0, 2.0 / -h, 0, 0,\n      0, 0, 1, 0,\n      -1, 1, 0, 1\n    ])\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vertexBuffer)\n    this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array([\n      // First triangle\n      // top left:\n      0, 0, 0, 0,\n      // top right:\n      w, 0, h264RenderState.maxXTexCoord, 0,\n      // bottom right:\n      w, h, h264RenderState.maxXTexCoord, h264RenderState.maxYTexCoord,\n\n      // Second triangle\n      // bottom right:\n      w, h, h264RenderState.maxXTexCoord, h264RenderState.maxYTexCoord,\n      // bottom left:\n      0, h, 0, h264RenderState.maxYTexCoord,\n      // top left:\n      0, 0, 0, 0\n    ]), this.gl.DYNAMIC_DRAW)\n    this.gl.vertexAttribPointer(this.shaderArgs.a_position, 2, this.gl.FLOAT, false, 16, 0)\n    this.gl.vertexAttribPointer(this.shaderArgs.a_texCoord, 2, this.gl.FLOAT, false, 16, 8)\n  }\n\n  draw () {\n    const gl = this.gl\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT)\n    gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 6)\n    gl.bindTexture(gl.TEXTURE_2D, null)\n  }\n}\n","// Copyright 2019 Erik De Rijcke\n//\n// This file is part of Greenfield.\n//\n// Greenfield is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Greenfield is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with Greenfield.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * Represents a WebGL texture object.\n */\nexport default class Texture {\n  /**\n   * @param {!WebGLRenderingContext}gl\n   * @param {!number}format\n   * @return {!Texture}\n   */\n  static create (gl, format) {\n    const texture = gl.createTexture()\n    gl.bindTexture(gl.TEXTURE_2D, texture)\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST)\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST)\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE)\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE)\n    gl.bindTexture(gl.TEXTURE_2D, null)\n    return new Texture(gl, format, texture)\n  }\n\n  /**\n   * Use Texture.create(..) instead.\n   * @param {WebGLRenderingContext}gl\n   * @param {number}format\n   * @param {WebGLTexture}texture\n   * @private\n   */\n  constructor (gl, format, texture) {\n    /**\n     * @type {WebGLRenderingContext}\n     */\n    this.gl = gl\n    /**\n     * @type {WebGLTexture}\n     */\n    this.texture = texture\n    /**\n     * @type {number}\n     */\n    this.format = format\n  }\n\n  /**\n   * @param {!Uint8Array|HTMLVideoElement}buffer\n   * @param {!Rect}geo\n   * @param {number}stride\n   */\n  subImage2dBuffer (buffer, x, y, width, height) {\n    const gl = this.gl\n    gl.bindTexture(gl.TEXTURE_2D, this.texture)\n    gl.texSubImage2D(gl.TEXTURE_2D, 0, x, y, width, height, this.format, gl.UNSIGNED_BYTE, buffer)\n    gl.bindTexture(gl.TEXTURE_2D, null)\n  }\n\n  /**\n   * @param {!Uint8Array|HTMLVideoElement}buffer\n   * @param {number}width\n   * @param {number}height\n   */\n  image2dBuffer (buffer, width, height) {\n    const gl = this.gl\n    gl.bindTexture(gl.TEXTURE_2D, this.texture)\n    gl.texImage2D(gl.TEXTURE_2D, 0, this.format, width, height, 0, this.format, gl.UNSIGNED_BYTE, buffer)\n    gl.bindTexture(gl.TEXTURE_2D, null)\n  }\n\n  delete () {\n    this.gl.deleteTexture(this.texture)\n    this.texture = null\n  }\n}\n","import YUVSurfaceShader from './YUVSurfaceShader'\nimport Texture from './Texture'\n\nclass CanvasRenderer {\n  constructor(canvas) {\n    this.canvas = canvas;\n    const gl = canvas.getContext('webgl')\n    this.yuvSurfaceShader = YUVSurfaceShader.create(gl)\n    this.yTexture = Texture.create(gl, gl.LUMINANCE)\n    this.uTexture = Texture.create(gl, gl.LUMINANCE)\n    this.vTexture = Texture.create(gl, gl.LUMINANCE)\n  }\n\n  /**\n   * @param {Uint8Array}buffer\n   * @param {number}width\n   * @param {number}height\n   */\n  onPicture (buffer, width, height) {\n    let canvas = this.canvas;\n\n    canvas.width = width\n    canvas.height = height\n\n    // the width & height returned are actually padded, so we have to use the frame size to get the real image dimension\n    // when uploading to texture\n    const stride = width // stride\n    // height is padded with filler rows\n\n    // if we knew the size of the video before encoding, we could cut out the black filler pixels. We don't, so just set\n    // it to the size after encoding\n    const sourceWidth = width\n    const sourceHeight = height\n    const maxXTexCoord = sourceWidth / stride\n    const maxYTexCoord = sourceHeight / height\n\n    const lumaSize = stride * height\n    const chromaSize = lumaSize >> 2\n\n    const yBuffer = buffer.subarray(0, lumaSize)\n    const uBuffer = buffer.subarray(lumaSize, lumaSize + chromaSize)\n    const vBuffer = buffer.subarray(lumaSize + chromaSize, lumaSize + (2 * chromaSize))\n\n    const chromaHeight = height >> 1\n    const chromaStride = stride >> 1\n\n    // we upload the entire image, including stride padding & filler rows. The actual visible image will be mapped\n    // from texture coordinates as to crop out stride padding & filler rows using maxXTexCoord and maxYTexCoord.\n\n    let yTexture = this.yTexture;\n    let uTexture = this.uTexture;\n    let vTexture = this.vTexture;\n\n    yTexture.image2dBuffer(yBuffer, stride, height)\n    uTexture.image2dBuffer(uBuffer, chromaStride, chromaHeight)\n    vTexture.image2dBuffer(vBuffer, chromaStride, chromaHeight)\n\n    this.yuvSurfaceShader.setTexture(yTexture, uTexture, vTexture)\n    this.yuvSurfaceShader.updateShaderData({ w: width, h: height }, { maxXTexCoord, maxYTexCoord })\n    this.yuvSurfaceShader.draw()\n  }\n}\n\nexport default CanvasRenderer;","import CanvasRenderer from './CanvasRenderer'\n\nlet canvasRenderer\n\nself.addEventListener('message', (e) => {\n    const message = e.data\n    const messageType = message.type\n    switch (messageType) {\n        case 'canvas':\n            canvasRenderer = new CanvasRenderer(message.canvas);\n            break;\n        case 'pictureReady': {\n            if (!canvasRenderer) {\n                console.error('Canvas Worker not initialized');\n                return;\n            }\n            const { width, height, data } = message\n            canvasRenderer.onPicture(new Uint8Array(data), width, height);\n            break\n        }\n    }\n});\n"],"sourceRoot":""}