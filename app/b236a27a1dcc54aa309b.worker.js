!function(t){var e={};function n(i){if(e[i])return e[i].exports;var r=e[i]={i:i,l:!1,exports:{}};return t[i].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)n.d(i,r,function(e){return t[e]}.bind(null,r));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";n.r(e);class i{constructor(t){this.gl=t,this.program=this.gl.createProgram()}attach(t){this.gl.attachShader(this.program,t)}link(){this.gl.linkProgram(this.program),this.gl.getProgramParameter(this.program,this.gl.LINK_STATUS)||console.error("Unable to initialize the shader program.")}use(){this.gl.useProgram(this.program)}getAttributeLocation(t){return this.gl.getAttribLocation(this.program,t)}getUniformLocation(t){return this.gl.getUniformLocation(this.program,t)}setUniformM4(t,e){this.gl.uniformMatrix4fv(t,!1,e)}}class r{static compile(t,e){let n;if("x-shader/x-fragment"===e.type)n=t.createShader(t.FRAGMENT_SHADER);else{if("x-shader/x-vertex"!==e.type)throw new Error("Unknown shader type: "+e.type);n=t.createShader(t.VERTEX_SHADER)}if(t.shaderSource(n,e.source),t.compileShader(n),!t.getShaderParameter(n,t.COMPILE_STATUS))throw new Error("An error occurred compiling the shaders: "+t.getShaderInfoLog(n));return n}}const s={type:"x-shader/x-vertex",source:"\n  precision mediump float;\n\n  uniform mat4 u_projection;\n  attribute vec2 a_position;\n  attribute vec2 a_texCoord;\n  varying vec2 v_texCoord;\n  void main(){\n      v_texCoord = a_texCoord;\n      gl_Position = u_projection * vec4(a_position, 0.0, 1.0);\n  }\n"},o={type:"x-shader/x-fragment",source:"\n  precision lowp float;\n  \n  varying vec2 v_texCoord;\n  \n  uniform sampler2D yTexture;\n  uniform sampler2D uTexture;\n  uniform sampler2D vTexture;\n    \n  const mat4 conversion = mat4(\n    1.0,     0.0,     1.402,  -0.701,\n    1.0,    -0.344,  -0.714,   0.529,\n    1.0,     1.772,   0.0,    -0.886,\n    0.0,     0.0,     0.0,     0.0\n  );\n\n  void main(void) {\n    float yChannel = texture2D(yTexture, v_texCoord).x;\n    float uChannel = texture2D(uTexture, v_texCoord).x;\n    float vChannel = texture2D(vTexture, v_texCoord).x;\n    vec4 channels = vec4(yChannel, uChannel, vChannel, 1.0);\n    vec3 rgb = (channels * conversion).xyz;\n    gl_FragColor = vec4(rgb, 1.0);\n  }\n"};class a{static create(t){const e=this._initShaders(t),n=this._initShaderArgs(t,e),i=this._initBuffers(t);return new a(t,i,n,e)}static _initShaders(t){const e=new i(t);return e.attach(r.compile(t,s)),e.attach(r.compile(t,o)),e.link(),e.use(),e}static _initShaderArgs(t,e){const n={};return n.yTexture=e.getUniformLocation("yTexture"),n.uTexture=e.getUniformLocation("uTexture"),n.vTexture=e.getUniformLocation("vTexture"),n.u_projection=e.getUniformLocation("u_projection"),n.a_position=e.getAttributeLocation("a_position"),t.enableVertexAttribArray(n.a_position),n.a_texCoord=e.getAttributeLocation("a_texCoord"),t.enableVertexAttribArray(n.a_texCoord),n}static _initBuffers(t){return t.createBuffer()}constructor(t,e,n,i){this.gl=t,this.vertexBuffer=e,this.shaderArgs=n,this.program=i}setTexture(t,e,n){const i=this.gl;i.uniform1i(this.shaderArgs.yTexture,0),i.uniform1i(this.shaderArgs.uTexture,1),i.uniform1i(this.shaderArgs.vTexture,2),i.activeTexture(i.TEXTURE0),i.bindTexture(i.TEXTURE_2D,t.texture),i.activeTexture(i.TEXTURE1),i.bindTexture(i.TEXTURE_2D,e.texture),i.activeTexture(i.TEXTURE2),i.bindTexture(i.TEXTURE_2D,n.texture)}use(){this.program.use()}release(){this.gl.useProgram(null)}updateShaderData(t,e){const{w:n,h:i}=t;this.gl.viewport(0,0,n,i),this.program.setUniformM4(this.shaderArgs.u_projection,[2/n,0,0,0,0,2/-i,0,0,0,0,1,0,-1,1,0,1]),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.vertexBuffer),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array([0,0,0,0,n,0,e.maxXTexCoord,0,n,i,e.maxXTexCoord,e.maxYTexCoord,n,i,e.maxXTexCoord,e.maxYTexCoord,0,i,0,e.maxYTexCoord,0,0,0,0]),this.gl.DYNAMIC_DRAW),this.gl.vertexAttribPointer(this.shaderArgs.a_position,2,this.gl.FLOAT,!1,16,0),this.gl.vertexAttribPointer(this.shaderArgs.a_texCoord,2,this.gl.FLOAT,!1,16,8)}draw(){const t=this.gl;t.clear(t.COLOR_BUFFER_BIT|t.DEPTH_BUFFER_BIT|t.STENCIL_BUFFER_BIT),t.drawArrays(this.gl.TRIANGLE_STRIP,0,6),t.bindTexture(t.TEXTURE_2D,null)}}class h{static create(t,e){const n=t.createTexture();return t.bindTexture(t.TEXTURE_2D,n),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.bindTexture(t.TEXTURE_2D,null),new h(t,e,n)}constructor(t,e,n){this.gl=t,this.texture=n,this.format=e}subImage2dBuffer(t,e,n,i,r){const s=this.gl;s.bindTexture(s.TEXTURE_2D,this.texture),s.texSubImage2D(s.TEXTURE_2D,0,e,n,i,r,this.format,s.UNSIGNED_BYTE,t),s.bindTexture(s.TEXTURE_2D,null)}image2dBuffer(t,e,n){const i=this.gl;i.bindTexture(i.TEXTURE_2D,this.texture),i.texImage2D(i.TEXTURE_2D,0,this.format,e,n,0,this.format,i.UNSIGNED_BYTE,t),i.bindTexture(i.TEXTURE_2D,null)}delete(){this.gl.deleteTexture(this.texture),this.texture=null}}var u=class{constructor(t){this.canvas=t;const e=t.getContext("webgl");this.yuvSurfaceShader=a.create(e),this.yTexture=h.create(e,e.LUMINANCE),this.uTexture=h.create(e,e.LUMINANCE),this.vTexture=h.create(e,e.LUMINANCE)}onPicture(t,e,n){let i=this.canvas;i.width=e,i.height=n;const r=e,s=e/r,o=n/n,a=r*n,h=a>>2,u=t.subarray(0,a),c=t.subarray(a,a+h),l=t.subarray(a+h,a+2*h),f=n>>1,d=r>>1;let v=this.yTexture,x=this.uTexture,m=this.vTexture;v.image2dBuffer(u,r,n),x.image2dBuffer(c,d,f),m.image2dBuffer(l,d,f),this.yuvSurfaceShader.setTexture(v,x,m),this.yuvSurfaceShader.updateShaderData({w:e,h:n},{maxXTexCoord:s,maxYTexCoord:o}),this.yuvSurfaceShader.draw()}};let c;self.addEventListener("message",t=>{const e=t.data;switch(e.type){case"canvas":c=new u(e.canvas);break;case"pictureReady":{if(!c)return void console.error("Canvas Worker not initialized");const{width:t,height:n,data:i}=e;c.onPicture(new Uint8Array(i),t,n);break}}})}]);
//# sourceMappingURL=b236a27a1dcc54aa309b.worker.js.map